## validator registration happy flow example
- Log: <log>
  Name: OperatorAdded
  Data:
    ID: <operator-id>
    Owner: <owner-address>
    PublicKey: <operator-public-key [rsa public key b64 encoded]>
- Log: <log>
  Name: OperatorAdded
  Data:
    ID: <operator-id>
    Owner: <owner-address>
    PublicKey: <operator-public-key [rsa public key b64 encoded]>
- Log: <log>
  Name: OperatorAdded
  Data:
    ID: <operator-id>
    Owner: <owner-address>
    PublicKey: <operator-public-key [rsa public key b64 encoded]>
- Log: <log>
  Name: OperatorAdded
  Data:
    ID: <operator-id>
    Owner: <owner-address>
    PublicKey: <operator-public-key [rsa public key b64 encoded]>
- Log:
  Name: ValidatorAdded
  Data:
    PublicKey: <validator-public-key>
    Owner: <owner-address>
    OperatorIds: <operator-ids e.g. [5, 6, 7, 8]>
    Shares: <shares>

## all possible events
- Log: <log>
  Name: OperatorAdded
  Data:
    ID: <operator-id>
    Owner: <owner-address>
    PublicKey: <operator-public-key [rsa public key b64 encoded]>
- Log:
  Name: OperatorRemoved
  Data:
    ID: <operator-id>
- Log:
  Name: ValidatorAdded
  Data:
    PublicKey: <validator-public-key>
    Owner: <owner-address>
    OperatorIds: <operator-ids e.g. [5, 6, 7, 8]>
    Shares: <shares>
- Log:
  Name: ValidatorRemoved
  Data:
    OwnerAddress: <owner-address>
    OperatorIds: <operator-ids e.g. [5, 6, 7, 8]>
    PublicKey: <validator-public-key>
- Log:
  Name: ClusterLiquidated
  Data:
    Owner: <owner-address>
    OperatorIds: <operator-ids e.g. [5, 6, 7, 8]>
- Log:
  Name: ClusterReactivated
  Data:
    Owner: <owner-address>
    OperatorIds: <operator-ids e.g. [5, 6, 7, 8]>
- Log:
  Name: FeeRecipientAddressUpdated
  Data:
    Owner: <owner-address>
    RecipientAddress: <recipient-address>
- Log:
  Name: ValidatorExited
  Data:
    PublicKey: <validator-public-key>
    OperatorIds: <operator-ids e.g. [5, 6, 7, 8]>
